[Anomalous_Login_Cluster0_Alert]
search = | inputlookup synthetic_auth_logs.csv | eval login_hour=strftime(strptime(_time,"%Y-%m-%d %H:%M:%S"),"%H") | eval success_flag=if(action="success",1,0) | stats count AS login_count, sum(success_flag) AS success_count, dc(src) AS unique_ip_count by user, login_hour | eval success_ratio=round(success_count / login_count, 2) | apply login_anomaly_detection_model | where cluster_id=0
alert_type = always
cron_schedule = */15 * * * *
actions = email
action.email.to = you@example.com
description = Alerts when anomalous logins (cluster 0) are detected

[Impossible_Travel_Detection_Alert]
search = | inputlookup synthetic_auth_logs.csv | sort user, _time | streamstats current=f window=1 last(_time) as prev_time, last(country) as prev_country by user | eval prev_time_epoch = strptime(prev_time, "%Y-%m-%d %H:%M:%S.%f") | eval current_time_epoch = strptime(_time, "%Y-%m-%d %H:%M:%S.%f") | eval time_diff = current_time_epoch - prev_time_epoch | where country != prev_country AND time_diff < 60 | eval travel_type = "Impossible Travel" | eval time_diff_human = tostring(time_diff, "duration") | table user, _time, prev_time, country, prev_country, time_diff, time_diff_human, travel_type
alert_type = always
cron_schedule = */30 * * * *
actions = email
action.email.to = you@example.com
description = Alerts on impossible travel logins (country change within 1 minute)

